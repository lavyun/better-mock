(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{862:function(t,s,a){"use strict";a.r(s);var n=a(65),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"mock"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#mock"}},[t._v("#")]),t._v(" mock")]),t._v(" "),a("p",[t._v("根据数据模板生成模拟数据，共有 5 种参数格式。")]),t._v(" "),a("h3",{attrs:{id:"mock-mock-template"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#mock-mock-template"}},[t._v("#")]),t._v(" Mock.mock( template )")]),t._v(" "),a("p",[t._v("根据数据模板生成模拟数据。")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("Mock"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("mock")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'list|1-10'")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'id|+1'")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'email'")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'@EMAIL'")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("code-link",[a("pre",[t._v("  const ret = Mock.mock({\n    'list|1-10': [{\n      'id|+1': 1,\n      'email': '@EMAIL'\n    }]\n  })\n  console.log(ret)\n  ")])]),t._v(" "),a("h3",{attrs:{id:"mock-mock-url-template"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#mock-mock-url-template"}},[t._v("#")]),t._v(" Mock.mock( url, template )")]),t._v(" "),a("p",[t._v("记录数据模板。当拦截到匹配 "),a("code",[t._v("url")]),t._v(" 的 Ajax 请求时，将根据数据模板 "),a("code",[t._v("template")]),t._v(" 生成模拟数据，并作为响应数据返回。")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("Mock"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("mock")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/mock_url'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'list|1-10'")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'id|+1'")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'email'")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'@EMAIL'")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("code-link",[a("pre",[t._v("  Mock.mock('/mock_url', {\n    'list|1-10': [{\n      'id|+1': 1,\n      'email': '@EMAIL'\n    }]\n  })\n  axios.get('/mock_url').then(res => {\n    console.log(res.data)\n  })\n  ")])]),t._v(" "),a("h3",{attrs:{id:"mock-mock-url-function-options"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#mock-mock-url-function-options"}},[t._v("#")]),t._v(" Mock.mock( url, function( options ) )")]),t._v(" "),a("p",[t._v("记录用于生成响应数据的函数。当拦截到匹配 "),a("code",[t._v("url")]),t._v(" 的 Ajax 请求时，函数 "),a("code",[t._v("function(options)")]),t._v(" 将被执行，并把执行结果作为响应数据返回。")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("Mock"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("mock")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/mock_url'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("options")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" options\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("code-link",[a("pre",[t._v("  Mock.mock('/mock_url', function (options) {\n    return options\n  })\n  axios.get('/mock_url').then(res => {\n    console.log(res.data)\n  })\n  ")])]),t._v(" "),a("h3",{attrs:{id:"mock-mock-url-type-template"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#mock-mock-url-type-template"}},[t._v("#")]),t._v(" Mock.mock( url, type, template )")]),t._v(" "),a("p",[t._v("记录数据模板。当拦截到匹配 "),a("code",[t._v("url")]),t._v(" 和 "),a("code",[t._v("type")]),t._v(" 的 Ajax 请求时，将根据数据模板 "),a("code",[t._v("template")]),t._v(" 生成模拟数据，并作为响应数据返回。")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("Mock"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("mock")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/mock_url'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'post'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'list|1-10'")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'id|+1'")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'email'")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'@EMAIL'")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("code-link",[a("pre",[t._v("  Mock.mock('/mock_url', 'post', {\n    'list|1-10': [{\n      'id|+1': 1,\n      'email': '@EMAIL'\n    }]\n  })\n  axios.post('/mock_url').then(res => {\n    console.log(res.data)\n  })\n  ")])]),t._v(" "),a("h3",{attrs:{id:"mock-mock-url-type-function-options"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#mock-mock-url-type-function-options"}},[t._v("#")]),t._v(" Mock.mock( url, type, function( options ) )")]),t._v(" "),a("p",[t._v("记录用于生成响应数据的函数。当拦截到匹配 "),a("code",[t._v("url")]),t._v(" 和 "),a("code",[t._v("type")]),t._v(" 的 Ajax 请求时，函数 "),a("code",[t._v("function(options)")]),t._v(" 将被执行，并把执行结果作为响应数据返回。")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("Mock"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("mock")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/mock_url'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'post'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("options")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" options\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("code-link",[a("pre",[t._v("  Mock.mock('/mock_url', 'post', function (options) {\n    return options\n  })\n  axios.post('/mock_url').then(res => {\n    console.log(res.data)\n  })\n  ")])]),t._v(" "),a("p",[t._v("函数可以返回一个 promise，用于异步生成数据。")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("Mock"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("mock")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/mock_url'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'post'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("options")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Promise")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("resolve")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setTimeout")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("resolve")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        value"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Math"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("random")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("code-link",[a("pre",[t._v("  Mock.mock('/mock_url', 'post', function (options) {\n    return new Promise(resolve => {\n      setTimeout(() => {\n        resolve({\n          value: Math.random()\n        })\n      }, 1000)\n    })\n  })\n  axios.post('/mock_url').then(res => {\n    console.log(res.data)\n  })\n  ")])]),t._v(" "),a("h3",{attrs:{id:"参数的含义和默认值如下所示"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参数的含义和默认值如下所示"}},[t._v("#")]),t._v(" 参数的含义和默认值如下所示:")]),t._v(" "),a("h4",{attrs:{id:"url"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#url"}},[t._v("#")]),t._v(" url "),a("Badge",{attrs:{text:"可选"}})],1),t._v(" "),a("p",[t._v("表示需要拦截的 URL，可以是 URL 字符串、URL 通配符 或者 URL 正则。例如 "),a("code",[t._v("/\\/domain\\/list\\.json/")]),t._v("、"),a("code",[t._v("'/domain/list/:id'")]),t._v("、"),a("code",[t._v("'/domain/list/*'")]),t._v("、"),a("code",[t._v("'/domain/list.json'")]),t._v("。")]),t._v(" "),a("h4",{attrs:{id:"type"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#type"}},[t._v("#")]),t._v(" type "),a("Badge",{attrs:{text:"可选"}})],1),t._v(" "),a("p",[t._v("表示需要拦截的 Ajax 请求类型。例如 "),a("code",[t._v("GET")]),t._v("、"),a("code",[t._v("POST")]),t._v("、"),a("code",[t._v("PUT")]),t._v("、"),a("code",[t._v("DELETE")]),t._v(" 等，支持小写。")]),t._v(" "),a("h4",{attrs:{id:"template"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#template"}},[t._v("#")]),t._v(" template "),a("Badge",{attrs:{text:"可选"}})],1),t._v(" "),a("p",[t._v("表示数据模板，可以是对象或字符串。例如 "),a("code",[t._v("{ 'data|1-10':[{}] }")]),t._v("、"),a("code",[t._v("'@EMAIL'")]),t._v("。")]),t._v(" "),a("h4",{attrs:{id:"function-options"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#function-options"}},[t._v("#")]),t._v(" function(options) "),a("Badge",{attrs:{text:"可选"}})],1),t._v(" "),a("p",[t._v("表示用于生成响应数据的函数。")]),t._v(" "),a("h5",{attrs:{id:"options"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#options"}},[t._v("#")]),t._v(" options")]),t._v(" "),a("p",[t._v("指向本次请求的 Ajax 选项集，含有 "),a("code",[t._v("url")]),t._v("、"),a("code",[t._v("type")]),t._v("、"),a("code",[t._v("body")]),t._v("、"),a("code",[t._v("headers")]),t._v(" 四个属性。")])],1)}),[],!1,null,null,null);s.default=e.exports}}]);